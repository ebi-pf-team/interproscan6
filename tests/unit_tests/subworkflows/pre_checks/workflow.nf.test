nextflow_workflow {

    name "Test Workflow PRE_CHECKS"
    script "interproscan/subworkflows/pre_checks/main.nf"
    workflow "PRE_CHECKS"

    stage {
        symlink "interproscan/subworkflows/sequence_analysis/check_data.nf"
        symlink "interproscan/subworkflows/sequence_analysis/check_sequences.nf"
        symlink "interproscan/subworkflows/xrefs/check_xref_data.nf"
        copy "tests/unit_tests/mock_data/antifam/AntiFam.hmm"
        copy "tests/unit_tests/mock_data/cdd/db/Cdd_NCBI.pal"
        copy "tests/unit_tests/mock_data/cdd/data"
        copy "tests/unit_tests/mock_data/xrefs/entries.json"
    }

    test("Run pre-analysis checks successfully") {

        when {
            params {
                input="$projectDir/tests/unit_tests/test_inputs/pre_analysis_checks/protein_seqs.fasta"
                applications="antifam,CDD"
                formats="json,xml"
            }
            workflow {
                """
                input[0] = false
                input[1] = file("${params.input}")
                input[2] = "meta/tests/unit_tests/mock_data" 
                input[3] = false
                input[4] = ['input', 'applications', 'disable_precalc', ]
                input[5] = "${params.applications}"
                input[6] = "${params.formats}"
                input[7] = false
                input[8] = "6.0.0"
                input[9] = "fast"
                input[10] = false
                input[11] = false
                input[12] = false
                """
            }
        }

        then {
            assert workflow.success
            assert workflow.exitStatus == 0
        }

    }


    test("Print help message") {

        when {
            params {
                input="test_inputs/protein_seqs.fasta"
                applications="antifam,CDD"
                formats="tsv-pro"
            }
            workflow {
                """
                input[0] = "true"
                input[1] = file("${params.input}")
                input[2] = "meta/tests/unit_tests/mock_data" 
                input[3] = false
                input[4] = ['input', 'applications', 'disable_precalc', ]
                input[5] = "${params.applications}"
                input[6] = "${params.formats}"
                input[7] = false
                input[8] = "6.0.0"
                input[9] = "fast"
                input[10] = false
                input[11] = false
                input[12] = false
                """
            }
        }

        then {
            assert workflow.success
            assert workflow.exitStatus == 0
        }

    }


    test("No input provided") {

        when {
            params {
                nucleic=false
                applications="antifam,CDD"
                formats="json,xml,tsv"
            }
            workflow {
                """
                input[0] = false
                input[1] = null
                input[2] = "meta/tests/unit_tests/mock_data" 
                input[3] = false
                input[4] = ['input', 'applications', 'disable_precalc', ]
                input[5] = "${params.applications}"
                input[6] = "${params.formats}"
                input[7] = false
                input[8] = "6.0.0"
                input[9] = "fast"
                input[10] = false
                input[11] = false
                input[12] = false
                """
            }
        }

        then {
            assert workflow.failed
            assert workflow.exitStatus == 5
        }

    }


    test("Provided protein seqs not nucleic") {


        when {
            params {
                input="$projectDir/tests/unit_tests/test_inputs/pre_analysis_checks/protein_seqs.fasta"
                applications="antifam,CDD"
                formats="json,tsv,tsv-pro"
            }
            workflow {
                """
                input[0] = false
                input[1] = file("${params.input}")
                input[2] = "meta/tests/unit_tests/mock_data" 
                input[3] = true
                input[4] = ['input', 'applications', 'disable_precalc', ]
                input[5] = "${params.applications}"
                input[6] = "${params.formats}"
                input[7] = false
                input[8] = "6.0.0"
                input[9] = "fast"
                input[10] = false
                input[11] = false
                input[12] = false
                """
            }
        }

        then {
            assert workflow.failed
            assert workflow.exitStatus == 1
        }

    }


    test("Provided nucleic seqs") {


        when {
            params {
                input="$projectDir/tests/unit_tests/test_inputs/pre_analysis_checks/nt_seqs.fasta"
                applications="antifam,CDD"
                formats="json"
            }
            workflow {
                """
                input[0] = false
                input[1] = file("${params.input}")
                input[2] = "meta/tests/unit_tests/mock_data" 
                input[3] = true
                input[4] = ['input', 'applications', 'disable_precalc', ]
                input[5] = "${params.applications}"
                input[6] = "${params.formats}"
                input[7] = false
                input[8] = "6.0.0"
                input[9] = "fast"
                input[10] = false
                input[11] = false
                input[12] = false
                """
            }
        }

        then {
            assert workflow.success
            assert workflow.exitStatus == 0
        }

    }


    test("Invalid parameter") {

        when {
            params {
                input="test_inputs/protein_seqs.fasta"
                applications="antifam,CDD"
                formats="json,xml"
            }
            workflow {
                """
                input[0] = false
                input[1] = file("${params.input}")
                input[2] = "meta/tests/unit_tests/mock_data" 
                input[3] = false
                input[4] = ['input', 'applications', 'disable_precalc', 'Bilbo']
                input[5] = "${params.applications}"
                input[6] = "${params.formats}"
                input[7] = false
                input[8] = "6.0.0"
                input[9] = "fast"
                input[10] = false
                input[11] = false
                input[12] = false
                """
            }
        }

        then {
            assert workflow.failed
            assert workflow.exitStatus == 22
        }

    }


    test("Invalid application") {

        when {
            params {
                input="test_inputs/protein_seqs.fasta"
                applications="antifam,CDD,Frodo"
                formats="json,xml"
            }
            workflow {
                """
                input[0] = false
                input[1] = file("${params.input}")
                input[2] = "meta/tests/unit_tests/mock_data" 
                input[3] = false
                input[4] = ['input', 'applications', 'disable_precalc', ]
                input[5] = "${params.applications}"
                input[6] = "${params.formats}"
                input[7] = false
                input[8] = "6.0.0"
                input[9] = "fast"
                input[10] = false
                input[11] = false
                input[12] = false
                """
            }
        }

        then {
            assert workflow.failed
            assert workflow.exitStatus == 22
        }

    }

    test("Invalid format") {

        when {
            params {
                input="test_inputs/protein_seqs.fasta"
                applications="antifam,CDD"
                formats="json,xml,Gollum"
            }
            workflow {
                """
                input[0] = false
                input[1] = file("${params.input}")
                input[2] = "meta/tests/unit_tests/mock_data" 
                input[3] = false
                input[4] = ['input', 'applications', 'disable_precalc', ]
                input[5] = "${params.applications}"
                input[6] = "${params.formats}"
                input[7] = false
                input[8] = "6.0.0"
                input[9] = "fast"
                input[10] = false
                input[11] = false
                input[12] = false
                """
            }
        }

        then {
            assert workflow.failed
            assert workflow.exitStatus == 22
        }

    }


    test("Empty input file") {

        when {
            params {
                input="$projectDir/tests/unit_tests/test_inputs/pre_analysis_checks/empty.fasta"
                applications="antifam,CDD"
                formats="tsv-pro,tsv"
            }
            workflow {
                """
                input[0] = false
                input[1] = file("${params.input}")
                input[2] = "meta/tests/unit_tests/mock_data" 
                input[3] = false
                input[4] = ['input', 'applications', 'disable_precalc', ]
                input[5] = "${params.applications}"
                input[6] = "${params.formats}"
                input[7] = false
                input[8] = "6.0.0"
                input[9] = "fast"
                input[10] = false
                input[11] = false
                input[12] = false
                """
            }
        }

        then {
            assert workflow.failed
            assert workflow.exitStatus == 5
        }

    }

    test("Print version") {

        when {
            params {
                input="$projectDir/tests/unit_tests/test_inputs/pre_analysis_checks/empty.fasta"
                applications="antifam,CDD"
                formats="tsv-pro,tsv"
            }
            workflow {
                """
                input[0] = false
                input[1] = file("${params.input}")
                input[2] = "meta/tests/unit_tests/mock_data" 
                input[3] = false
                input[4] = ['input', 'applications', 'disable_precalc', ]
                input[5] = "${params.applications}"
                input[6] = "${params.formats}"
                input[7] = true
                input[8] = "6.0.0"
                input[9] = "fast"
                input[10] = false
                input[11] = false
                input[12] = false
                """
            }
        }

        then {
            assert workflow.success
            assert workflow.exitStatus == 0
        }

    }

    test("Incorrect SignalP mode") {

        when {
            params {
                input="$projectDir/tests/unit_tests/test_inputs/pre_analysis_checks/empty.fasta"
                applications="antifam,CDD"
                formats="tsv-pro,tsv"
            }
            workflow {
                """
                input[0] = false
                input[1] = file("${params.input}")
                input[2] = "meta/tests/unit_tests/mock_data" 
                input[3] = false
                input[4] = ['input', 'applications', 'disable_precalc', ]
                input[5] = "${params.applications}"
                input[6] = "${params.formats}"
                input[7] = false
                input[8] = "6.0.0"
                input[9] = "fake-signalp-mode"
                input[10] = false
                input[11] = false
                input[12] = false
                """
            }
        }

        then {
            assert workflow.failed
            assert workflow.exitStatus == 22
        }

    }

    test("Crash when no data dir") {

        when {
            params {
                input="$projectDir/tests/unit_tests/test_inputs/pre_analysis_checks/empty.fasta"
                applications="antifam,CDD"
                formats="tsv-pro,tsv"
            }
            workflow {
                """
                input[0] = false
                input[1] = file("${params.input}")
                input[2] = "fake_data_dir" 
                input[3] = false
                input[4] = ['input', 'applications', 'disable_precalc', ]
                input[5] = "${params.applications}"
                input[6] = "${params.formats}"
                input[7] = false
                input[8] = "6.0.0"
                input[9] = "fast"
                input[10] = false
                input[11] = false
                input[12] = false
                """
            }
        }

        then {
            assert workflow.failed
            assert workflow.exitStatus == 5
        }

    }

}
