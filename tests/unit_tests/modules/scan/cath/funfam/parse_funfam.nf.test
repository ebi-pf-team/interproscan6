nextflow_process {

    name "Test Process PARSE_FUNFAM"
    script "modules/cath/funfam/main.nf"
    process "PARSE_FUNFAM"

    stage {
        symlink "tests/data/channels/cathfunfam.hmmsearch.out"
        symlink "tests/data/channels/cathfunfam.resolved.out"
    }

    test("Should run without failures") {

        when {
            process {
                """
                input[0] = [1, 1, file("meta/tests/data/channels/cathfunfam.hmmsearch.out"), file("meta/tests/data/channels/cathfunfam.resolved.out")]
                """
            }
        }

        then {
            assert process.success
            def expected = "tests/data/channels/cathfunfam.json"
            def observed = process.out.get(0).get(0).get(2)
            def cmd = "python3 tests/regression_tests/test_matches.py --format intermediate --expected ${expected} --observed ${observed} --summary --applications funfam"
            def process = cmd.execute()
            process.waitFor()
            def stdout = process.text.trim().readLines()
            assert stdout[1] == "Matches only in expected : 0"
            assert stdout[2] == "Matches only in observed : 0"
        }
    }
}
