nextflow_process {

    name "Test Process GENE3D_FILTER_MATCHES"
    script "interproscan/modules/hmmer/filter/main.nf"
    process "GENE3D_FILTER_MATCHES"

    stage {
        symlink "interproscan/scripts/members/gene3d/filter_ips6_hits.py"
        symlink "tests/unit_tests/test_inputs/hmmer_filter_matches/gene3d/gene3d_out.cath.resolved.out.cath_superfamilies"
        symlink "tests/unit_tests/test_inputs/hmmer_filter_matches/gene3d/hmmer_parsed_gene3d_out.json"
    }

    test("Should run without failures") {

        when {
            params {}
            process {
                """
                input[0] = file("meta/tests/unit_tests/test_inputs/hmmer_filter_matches/gene3d/gene3d_out.cath.resolved.out.cath_superfamilies")
                input[1] = file("meta/tests/unit_tests/test_inputs/hmmer_filter_matches/gene3d/hmmer_parsed_gene3d_out.json")
                input[2] = [
                    "--min-dc-hmm-coverage=80 --worst-permissible-bitscore 25 --output-hmmer-aln",
                    "cath/gene3d/model_to_family_map.tsv",
                    "cath/gene3d/discontinuous_regs.pkl.py3",
                    "bin/gene3d/assign_cath_superfamilies.py",
                    "path-to-funfam-models"
                ]
                """
            }
        }

        then {
            assert process.success
            assert snapshot(process.out).match()
        }

    }

}
