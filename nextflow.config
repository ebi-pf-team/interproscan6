
dag {
    enabled = true
    overwrite = true
    file = 'pipeline_dag.html'
}

process.container = 'interproscan6'
docker.enabled = false

params {
    xref {
        entries="$projectDir/data_xref/entries"
        goterms="$projectDir/data_xref/goterms"
        pathways="$projectDir/data_xref/pathways"
    }
    matchlookupurl = "https://www.ebi.ac.uk/interpro/match-lookup"
    batchsize = 2  %100
    publish_dir = './results'
}

process {
    withLabel: retry_two {
        errorStrategy = 'retry'
        maxRetries = 2
    }
    withLabel: retry_one {
        errorStrategy = 'retry'
        maxRetries = 1
    }
    withLabel: no_retry {
        maxRetries = 0
    }
}

lsf {
    process {
        executor = 'lsf'
        queue = { task.memory < 300.GB ? 'standard' : 'bigmem' }
        perJobMemLimit = true
        errorStrategy = 'finish'

        withLabel: 'local' {
            executor = 'local'
        }
        withLabel: 'default' {
            cpus = 1
            memory = 100.MB
            time = 1.min
        }
        withLabel: 'normal' {
            cpus = 1
            memory = 1.GB
            time = 60.min
        }
        withLabel: 'variable_2_8_32' {
            cpus = 1
            time = { 60.min * task.attempt }
            // memory 2 - 8 - 32 GB
            memory = { 2.GB * Math.pow(4, (task.attempt - 1)) }
            errorStrategy = { [137, 140].contains(task.exitStatus) ? 'retry' : 'finish' }
            maxRetries = 3
        }
        withLabel: 'adaptive' {
            cpus = 1
            time = { 60.min * task.attempt }
            // memory 4 - 16 - 64 GB
            memory = { 4.GB * Math.pow(4, (task.attempt - 1)) }
            errorStrategy = { [137, 140].contains(task.exitStatus) ? 'retry' : 'finish' }
            maxRetries = 3
        }
    }
}